version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: gestion-stock-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_secure_password_here
      POSTGRES_DB: gestion_stock
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    container_name: gestion-stock-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_USER: postgres
      DB_HOST: postgres
      DB_NAME: gestion_stock
      DB_PASSWORD: your_secure_password_here
      DB_PORT: 5432
      PORT: 3000
      NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: npm start

  # Frontend (Optional - avec Nginx)
  frontend:
    image: nginx:alpine
    container_name: gestion-stock-frontend
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: gestion-stock-network